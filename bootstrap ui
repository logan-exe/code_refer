import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';

interface Category {
  category: string;
  items: string[];
}

const data: Category[] = [
  { category: 'Fruits', items: ['Apple', 'Banana', 'Orange'] },
  { category: 'Vegetables', items: ['Carrot', 'Broccoli', 'Spinach'] },
  { category: 'Dairy', items: ['Milk', 'Cheese', 'Yogurt'] }
];

const App: React.FC = () => {
  const [searchTerm, setSearchTerm] = useState<string>('');
  const [selectedItem, setSelectedItem] = useState<string>('');

  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSearchTerm(e.target.value);
  };

  const handleItemClick = (item: string) => {
    setSelectedItem(item);
  };

  const filteredData = data
    .map(category => ({
      ...category,
      items: category.items.filter(item =>
        item.toLowerCase().includes(searchTerm.toLowerCase())
      )
    }))
    .filter(category =>
      category.category.toLowerCase().includes(searchTerm.toLowerCase()) ||
      category.items.length > 0
    );

  return (
    <div className="container-fluid">
      <div className="row">
        <div className="col-md-8 border">
          <div className="p-3">
            <h1>Center Container</h1>
            <p>This is the center container.</p>
            {selectedItem && <p>Selected Item: {selectedItem}</p>}
          </div>
        </div>
        <div className="col-md-3 border" style={{ height: '100vh', overflowY: 'auto' }}>
          <div className="p-3">
            <div className="input-group mb-3">
              <input
                type="text"
                className="form-control"
                placeholder="Search"
                value={searchTerm}
                onChange={handleSearchChange}
              />
              <span className="input-group-text">
                <i className="bi bi-search"></i>
              </span>
            </div>
            <div className="mt-3">
              {filteredData.map((category, idx) => (
                <div key={idx} className="mb-2">
                  <button
                    className="btn btn-outline-success w-100 text-left"
                    type="button"
                    onClick={() => {
                      const menu = document.getElementById(`dropdown-menu-${idx}`);
                      if (menu) {
                        menu.classList.toggle('show');
                      }
                    }}
                  >
                    {category.category}
                  </button>
                  <ul className="dropdown-menu w-100" id={`dropdown-menu-${idx}`} style={{ display: 'none' }}>
                    {category.items.length > 0 ? (
                      category.items.map((item, itemIdx) => (
                        <li key={itemIdx}>
                          <a
                            className={`dropdown-item ${item === selectedItem ? 'active' : ''}`}
                            href="#"
                            onClick={() => handleItemClick(item)}
                          >
                            {item}
                          </a>
                        </li>
                      ))
                    ) : (
                      <li><span className="dropdown-item">No items found</span></li>
                    )}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default App;
