import React, { useState, useEffect } from 'react';
import axios from 'axios';

function DatabaseChatInterface() {
  const [tables, setTables] = useState([]);
  const [selectedTables, setSelectedTables] = useState([]);
  const [messages, setMessages] = useState([]);
  const [newMessage, setNewMessage] = useState('');

  useEffect(() => {
    fetchTables();
  }, []);

  const fetchTables = async () => {
    try {
      const response = await axios.get('http://localhost:8000/tables');
      setTables(response.data.tables);
    } catch (error) {
      console.error('Error fetching tables:', error);
    }
  };

  const handleTableSelectionChange = (tableName) => {
    if (selectedTables.includes(tableName)) {
      setSelectedTables(selectedTables.filter(t => t !== tableName));
    } else {
      setSelectedTables([...selectedTables, tableName]);
    }
  };

  const handleSendMessage = async () => {
    const prompt = newMessage;
    try {
      const response = await axios.post('http://localhost:8000/generate_sql', {
        prompt,
        table_names: JSON.stringify(selectedTables)
      });
      setMessages(prev => [...prev, { type: 'user', text: prompt }, { type: 'response', text: response.data.query }]);
      setNewMessage('');
    } catch (error) {
      console.error('Error generating SQL:', error);
    }
  };

  return (
    <div className="flex">
      <div className="w-1/4 p-4 border-r">
        <h2 className="font-bold mb-4">Tables</h2>
        <div className="space-y-2">
          {tables.map(table => (
            <div key={table} className="flex items-center">
              <input
                type="checkbox"
                checked={selectedTables.includes(table)}
                onChange={() => handleTableSelectionChange(table)}
                className="mr-2"
              />
              <label className="cursor-pointer">{table}</label>
            </div>
          ))}
        </div>
      </div>
      <div className="w-3/4 p-4">
        <div className="h-3/4 overflow-auto mb-4">
          {messages.map((message, index) => (
            <div key={index} className={`p-2 rounded ${message.type === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-black'}`}>
              {message.text}
            </div>
          ))}
        </div>
        <div>
          <textarea value={newMessage} onChange={e => setNewMessage(e.target.value)} className="border p-2 w-full mb-2" />
          <button onClick={handleSendMessage} className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
            Send
          </button>
        </div>
      </div>
    </div>
  );
}

export default DatabaseChatInterface;
